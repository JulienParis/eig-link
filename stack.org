#+title: Stack

Ce document décrit les outils employés et déployés dans chacun des
défis EIG.

* TODO Archifiltre
* TODO b@liseNAV
* TODO BrigadeNumérique
* TODO CoachÉlève
* TODO dataESR
* EIG Link
  
** Stack

- Langages principaux : [[https://clojure.org/][Clojure]] et [[https://clojurescript.org/][Clojurescript]]
- Framework pour application web : [[https://github.com/Day8/re-frame][re-frame]]
- Design : [[https://getbootstrap.com/][Bootstrap]] via [[https://github.com/Day8/re-com][re-com]] ou [[https://ant.design/][Ant]] via [[https://github.com/priornix/antizer][antizer]]
- https://www.datomic.com pour la base de données
- https://auth0.com pour la gestion des utilisateurs
- http://filestack.com pour la gestion des fichiers

** Outils de développement

- [[https://www.gnu.org/software/emacs/][GNU Emacs]]
- [[https://orgmode.org/][Org-mode]]
- [[https://github.com/clojure-emacs/cider][cider]]

** Livrables d’information

- Site web [[https://github.com/entrepreneur-interet-general/blog-eig2][blog-eig2]]
- Dépôt d’information [[https://github.com/entrepreneur-interet-general/eig-link][eig-link]]

** Livrables code

- Outil web pour choisir une licence libre
- Outil web de mise en relation des compétences
- Outil web de journal de bord collectif (rex eig1 eig2)
- Outil web « EIG Readiness Scale »
- Outil web « échelle de Costanza » (voir [[http://s3.cleverelephant.ca/2018-small-it.pdf][ce doc]])

* TODO Gobelins
* Hopkins

** Stack

- Langages principaux: Python et Scala
- Librairies: scikit-learn, pandas, TensorFlow, pyspark
- Base de données: Hive, ElasticSearch, Titan (à venir)

** Outils de datascience

- Dataiku

** Livrables code 

- algo de matching: dédoublonnage de base + recherche (semi-)temps réel
- graphes 
- classification sur du texte

* Lab Santé

** Stack

- Langages principaux: R et python
- Librairies: 
 - python: pandas, scikit-learn, BeautifulSoup, Selenium
 - R: data.table, dplyr, rvest, shiny, plotly

** Outils de développement

- python: Jupyter
- R: RStudio

** Livrables code

- Plusieurs quickwins sur un gitlab privé DREES que l'on a créé
- Formations R et python
- Scripts R d'imputation de non-réponse partielle pour traiter les sondages
- App Shiny de classification d'indicateurs statistiques basée sur la description textuelle (approche active learning)
- A compléter

* PrédiSauvetage
** Stack

- Datascience : Python 3, pandas, numpy, PostgreSQL
- App : Laravel
- Visualisation : Redash
- ETL : Apache Airflow / Embulk
- Cartographie : Leaflet

** Outils de développement
- Sublime Text
- CircleCI

* Prévisecours

** Stack

- Datascience : Dataiku + python 2 (scikit-learn, pandas) + SQL
- Dataviz (à confirmer): Tableau ou Superset ?
- Appli/carto : Vue.js + Leaflet (reuse de cartAV ?)
- Backend : python 3
- Bdd : elasticsearch / postgres / Vertica
- Rp : nginx
- Packaging: docker

** Outils de développement

- SublimeText
- Atom

** Livrables code

- Modèle de machine learning répondant à différent scénarios?
- Application standalone pour faire tourner les modèles?
- Application standalone pour la carto?
- Outil de génération de différent scénario pour les features dites "variables" (meteo par exemple)?


* TODO Signaux Faibles

* SocialConnect

** Stack(s) : 
- Langages principaux : python (backend) et javascript (front)
- Backend : Tornado et/ou Flask + Nginx (Python 2.7) pour les webapps
- Frontends css : Bulma, Bootstrap
- Frontend js : Vue.js
- Dataviz : Leaflet.js, charts.js, d3.js... 
- Données tabulaires (client) : Datatables (?)
- BDD : principalement MongoDB, Postgres si nécessaire

** Livrables code : 
- de manière générale des webapps intéropérables (briques d'un workflow) + documentation : 
- webapp n°1 de webscraping / API primaire : [OpenScraper](https://github.com/entrepreneur-interet-general/OpenScraper)
- webapp n°2 d'agrégation / enrichissement de données brutes / API sur les données de la webapp n°1
- webapp n°3 de dataviz / moteur de recherche sur les données de la webapp n°2 ou/et de la webapp n°1 : [Carrefour des innovations sociales](https://github.com/entrepreneur-interet-general/CIS-front)
- webapp n°4 (optionnel) / générateur de widgets ou iframes allant taper l'API dans la webapp n°2 ou/et de la webapp n°1

** Outils de développement code :
- VIM : virtualenv
- Notebook : Jupyter
- Editeur : Visual studio code
- Prod : nom de domaine OVH, serveur DigitalOcean
- Git 

** Livrables UI/UX (à mettre à jour par Elise) :
- kit de communication du projet 
- écrans UX
- ...

** Outils de développement UI/UX (à mettre à jour par Elise) :
- Suite Adobe : XD, Illustrator, InDesign
- Entretiens, focus groups, ...
- ...
